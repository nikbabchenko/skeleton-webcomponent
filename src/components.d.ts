/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface NbSkeleton {
        /**
          * Animation type
          * @type {('progress' | 'progress-dark' | 'pulse' | 'false')}
          * @memberof Skeleton
         */
        "animation": 'progress' | 'progress-dark' | 'pulse' | 'false';
        /**
          * Number of rows of current skeleton type
          * @memberof Skeleton
         */
        "count": number;
        /**
          * Custom css styles (background/margins/width/height etc.)
          * @type {({[k: string]: string} | string)}
          * @memberof Skeleton
         */
        "customStyles": { [key: string]: string } | string;
        /**
          * Height of the skeleton ex. 100px, 100%, auto etc.
          * @type {string}
          * @memberof Skeleton
         */
        "height": string;
        /**
          * MarginBottom of the skeleton ex. 10px, 0 etc.
          * @type {string}
          * @memberof Skeleton
         */
        "marginBottom": string;
        /**
          * Whether to show warnings for the wrong animation type/custom styles
          * @memberof Skeleton
         */
        "showWarnings": boolean;
        /**
          * Variant of the skeleton - circle or row
          * @type {('circle' | '')}
          * @memberof Skeleton
         */
        "variant": 'circle' | 'rect' | 'text';
        /**
          * Width of the skeleton ex. 100px, 100%, auto etc.
          * @type {string}
          * @memberof Skeleton
         */
        "width": string;
    }
}
declare global {
    interface HTMLNbSkeletonElement extends Components.NbSkeleton, HTMLStencilElement {
    }
    var HTMLNbSkeletonElement: {
        prototype: HTMLNbSkeletonElement;
        new (): HTMLNbSkeletonElement;
    };
    interface HTMLElementTagNameMap {
        "nb-skeleton": HTMLNbSkeletonElement;
    }
}
declare namespace LocalJSX {
    interface NbSkeleton {
        /**
          * Animation type
          * @type {('progress' | 'progress-dark' | 'pulse' | 'false')}
          * @memberof Skeleton
         */
        "animation"?: 'progress' | 'progress-dark' | 'pulse' | 'false';
        /**
          * Number of rows of current skeleton type
          * @memberof Skeleton
         */
        "count"?: number;
        /**
          * Custom css styles (background/margins/width/height etc.)
          * @type {({[k: string]: string} | string)}
          * @memberof Skeleton
         */
        "customStyles"?: { [key: string]: string } | string;
        /**
          * Height of the skeleton ex. 100px, 100%, auto etc.
          * @type {string}
          * @memberof Skeleton
         */
        "height"?: string;
        /**
          * MarginBottom of the skeleton ex. 10px, 0 etc.
          * @type {string}
          * @memberof Skeleton
         */
        "marginBottom"?: string;
        /**
          * Whether to show warnings for the wrong animation type/custom styles
          * @memberof Skeleton
         */
        "showWarnings"?: boolean;
        /**
          * Variant of the skeleton - circle or row
          * @type {('circle' | '')}
          * @memberof Skeleton
         */
        "variant"?: 'circle' | 'rect' | 'text';
        /**
          * Width of the skeleton ex. 100px, 100%, auto etc.
          * @type {string}
          * @memberof Skeleton
         */
        "width"?: string;
    }
    interface IntrinsicElements {
        "nb-skeleton": NbSkeleton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "nb-skeleton": LocalJSX.NbSkeleton & JSXBase.HTMLAttributes<HTMLNbSkeletonElement>;
        }
    }
}
